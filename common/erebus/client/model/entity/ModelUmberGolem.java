
package erebus.client.model.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelUmberGolem extends ModelBase
{
	//fields
	ModelRenderer HeadTop;
	ModelRenderer HeadMain;
	ModelRenderer HeadFront;
	ModelRenderer HeadBottom;
	ModelRenderer EyeR;
	ModelRenderer EyeL;
	ModelRenderer MandibleR1;
	ModelRenderer MandibleR2;
	ModelRenderer MandibleL1;
	ModelRenderer MandibleL2;
	ModelRenderer Neck;
	ModelRenderer BodyTop;
	ModelRenderer BodyMid;
	ModelRenderer BodyMain;
	ModelRenderer BodyBack;
	ModelRenderer ArmR1;
	ModelRenderer ArmR2;
	ModelRenderer ArmR3;
	ModelRenderer PincerR1;
	ModelRenderer PincerROuter;
	ModelRenderer PincerRInner;
	ModelRenderer ArmL1;
	ModelRenderer ArmL2;
	ModelRenderer ArmL3;
	ModelRenderer PincerL1;
	ModelRenderer PincerLOuter;
	ModelRenderer PincerLInner;
	ModelRenderer LegR1;
	ModelRenderer LegR2;
	ModelRenderer FootR;
	ModelRenderer FootRFront;
	ModelRenderer ToeROuter1;
	ModelRenderer ToeROuter2;
	ModelRenderer ToeRInner1;
	ModelRenderer ToeRInner2;
	ModelRenderer FootRBack;
	ModelRenderer ToeRBack1;
	ModelRenderer ToeRBack2;
	ModelRenderer LegL1;
	ModelRenderer LegL2;
	ModelRenderer FootL;
	ModelRenderer FootLFront;
	ModelRenderer ToeLOuter1;
	ModelRenderer ToeLOuter2;
	ModelRenderer ToeLInner1;
	ModelRenderer ToeLInner2;
	ModelRenderer FootLBack;
	ModelRenderer ToeLBack1;
	ModelRenderer ToeLBack2;

	public ModelUmberGolem()
	{
		textureWidth = 64;
		textureHeight = 128;

		HeadTop = new ModelRenderer(this, 0, 0);
		HeadTop.addBox(-1.5F, -3F, -4.5F, 3, 1, 3);
		HeadTop.setRotationPoint(0F, 5F, -5F);
		HeadTop.setTextureSize(64, 128);
		HeadTop.mirror = true;
		setRotation(HeadTop, 0.2617994F, 0F, 0F);
		HeadMain = new ModelRenderer(this, 0, 6);
		HeadMain.addBox(-2.5F, -2F, -5.5F, 5, 5, 5);
		HeadMain.setRotationPoint(0F, 5F, -5F);
		HeadMain.setTextureSize(64, 128);
		HeadMain.mirror = true;
		setRotation(HeadMain, 0.2617994F, 0F, 0F);
		HeadFront = new ModelRenderer(this, 0, 18);
		HeadFront.addBox(-2F, -1F, -6.5F, 4, 3, 1);
		HeadFront.setRotationPoint(0F, 5F, -5F);
		HeadFront.setTextureSize(64, 128);
		HeadFront.mirror = true;
		setRotation(HeadFront, 0.2617994F, 0F, 0F);
		HeadBottom = new ModelRenderer(this, 11, 18);
		HeadBottom.addBox(-1.5F, 3F, -4.5F, 3, 1, 3);
		HeadBottom.setRotationPoint(0F, 5F, -5F);
		HeadBottom.setTextureSize(64, 128);
		HeadBottom.mirror = true;
		setRotation(HeadBottom, 0.2617994F, 0F, 0F);
		EyeR = new ModelRenderer(this, 21, 0);
		EyeR.addBox(-3.5F, -2F, -4F, 1, 2, 3);
		EyeR.setRotationPoint(0F, 5F, -5F);
		EyeR.setTextureSize(64, 128);
		EyeR.mirror = true;
		setRotation(EyeR, 0.6981317F, 0F, 0F);
		EyeL = new ModelRenderer(this, 21, 8);
		EyeL.addBox(2.5F, -2F, -4F, 1, 2, 3);
		EyeL.setRotationPoint(0F, 5F, -5F);
		EyeL.setTextureSize(64, 128);
		EyeL.mirror = true;
		setRotation(EyeL, 0.6981317F, 0F, 0F);
		MandibleR1 = new ModelRenderer(this, 30, 56);
		MandibleR1.addBox(-3.5F, 1F, -10.5F, 2, 1, 6);
		MandibleR1.setRotationPoint(0F, 5F, -5F);
		MandibleR1.setTextureSize(64, 128);
		MandibleR1.mirror = true;
		setRotation(MandibleR1, 0.2617994F, 0F, 0F);
		MandibleR2 = new ModelRenderer(this, 31, 75);
		MandibleR2.addBox(-1.5F, 1F, -11.5F, 1, 1, 2);
		MandibleR2.setRotationPoint(0F, 5F, -5F);
		MandibleR2.setTextureSize(64, 128);
		MandibleR2.mirror = true;
		setRotation(MandibleR2, 0.2617994F, 0F, 0F);
		MandibleL1 = new ModelRenderer(this, 30, 65);
		MandibleL1.addBox(1.5F, 1F, -10.5F, 2, 1, 6);
		MandibleL1.setRotationPoint(0F, 5F, -5F);
		MandibleL1.setTextureSize(64, 128);
		MandibleL1.mirror = true;
		setRotation(MandibleL1, 0.2617994F, 0F, 0F);
		MandibleL2 = new ModelRenderer(this, 31, 81);
		MandibleL2.addBox(0.5F, 1F, -11.5F, 1, 1, 2);
		MandibleL2.setRotationPoint(0F, 5F, -5F);
		MandibleL2.setTextureSize(64, 128);
		MandibleL2.mirror = true;
		setRotation(MandibleL2, 0.2617994F, 0F, 0F);
		Neck = new ModelRenderer(this, 37, 45);
		Neck.addBox(-1.5F, -1F, -0.5F, 3, 3, 2);
		Neck.setRotationPoint(0F, 5F, -5F);
		Neck.setTextureSize(64, 128);
		Neck.mirror = true;
		setRotation(Neck, 0.2617994F, 0F, 0F);
		BodyTop = new ModelRenderer(this, 0, 23);
		BodyTop.addBox(-4F, -2F, -1.5F, 8, 1, 4);
		BodyTop.setRotationPoint(0F, 4F, -3F);
		BodyTop.setTextureSize(64, 128);
		BodyTop.mirror = true;
		setRotation(BodyTop, 0.2617994F, 0F, 0F);
		BodyMid = new ModelRenderer(this, 0, 43);
		BodyMid.addBox(-6F, 0F, -2.5F, 12, 5, 6);
		BodyMid.setRotationPoint(0F, 3F, -3F);
		BodyMid.setTextureSize(64, 128);
		BodyMid.mirror = true;
		setRotation(BodyMid, 0.2617994F, 0F, 0F);
		BodyMain = new ModelRenderer(this, 0, 56);
		BodyMain.addBox(-4.5F, 5F, -1.5F, 9, 7, 5);
		BodyMain.setRotationPoint(0F, 3F, -3F);
		BodyMain.setTextureSize(64, 128);
		BodyMain.mirror = true;
		setRotation(BodyMain, 0.2617994F, 0F, 0F);
		BodyBack = new ModelRenderer(this, 0, 30);
		BodyBack.addBox(-4F, 1F, 3.5F, 8, 9, 2);
		BodyBack.setRotationPoint(0F, 3F, -3F);
		BodyBack.setTextureSize(64, 128);
		BodyBack.mirror = true;
		setRotation(BodyBack, 0.2617994F, 0F, 0F);
		ArmR1 = new ModelRenderer(this, 30, 0);
		ArmR1.addBox(-4F, -2F, -1.5F, 4, 4, 5);
		ArmR1.setRotationPoint(-6F, 5F, -3F);
		ArmR1.setTextureSize(64, 128);
		ArmR1.mirror = true;
		setRotation(ArmR1, -0.2617994F, 0F, 0F);
		ArmR2 = new ModelRenderer(this, 30, 12);
		ArmR2.addBox(-3.5F, 2F, -0.5F, 3, 4, 3);
		// ArmR2.setRotationPoint(-6F, 5F, -3F);
		ArmR2.setTextureSize(64, 128);
		ArmR2.mirror = true;
		setRotation(ArmR2, 0.2617994F, 0F, 0F);
		ArmR3 = new ModelRenderer(this, 30, 22);
		ArmR3.addBox(-3F, 1F, 3.5F, 2, 4, 3);
		//   ArmR3.setRotationPoint(-6F, 5F, -3F);
		ArmR3.setTextureSize(64, 128);
		ArmR3.mirror = true;
		setRotation(ArmR3, -0.7853982F, 0F, 0F);
		PincerR1 = new ModelRenderer(this, 30, 32);
		PincerR1.addBox(-4F, 5F, 2.5F, 4, 4, 4);
		//  PincerR1.setRotationPoint(-6F, 5F, -3F);
		PincerR1.setTextureSize(64, 128);
		PincerR1.mirror = true;
		setRotation(PincerR1, -0.7853982F, 0F, 0F);
		PincerROuter = new ModelRenderer(this, 43, 12);
		PincerROuter.addBox(-3.5F, 9F, 3.5F, 1, 3, 2);
		//  PincerROuter.setRotationPoint(-6F, 5F, -3F);
		PincerROuter.setTextureSize(64, 128);
		PincerROuter.mirror = true;
		setRotation(PincerROuter, -0.7853982F, 0F, 0F);
		PincerRInner = new ModelRenderer(this, 43, 19);
		PincerRInner.addBox(-1.5F, 9F, 3.5F, 1, 3, 2);
		//  PincerRInner.setRotationPoint(-6F, 5F, -3F);
		PincerRInner.setTextureSize(64, 128);
		PincerRInner.mirror = true;
		setRotation(PincerRInner, -0.7853982F, 0F, 0F);
		ArmL1 = new ModelRenderer(this, 30, 0);
		ArmL1.addBox(0F, -2F, -1.5F, 4, 4, 5);
		ArmL1.setRotationPoint(6F, 5F, -3F);
		ArmL1.setTextureSize(64, 128);
		ArmL1.mirror = true;
		setRotation(ArmL1, -0.2617994F, 0F, 0F);
		ArmL2 = new ModelRenderer(this, 30, 12);
		ArmL2.addBox(0.5F, 2F, -0.5F, 3, 4, 3);
		//  ArmL2.setRotationPoint(6F, 5F, -3F);
		ArmL2.setTextureSize(64, 128);
		ArmL2.mirror = true;
		setRotation(ArmL2, 0.2617994F, 0F, 0F);
		ArmL3 = new ModelRenderer(this, 30, 22);
		ArmL3.addBox(1F, 1F, 3.5F, 2, 4, 3);
		//  ArmL3.setRotationPoint(6F, 5F, -3F);
		ArmL3.setTextureSize(64, 128);
		ArmL3.mirror = true;
		setRotation(ArmL3, -0.7853982F, 0F, 0F);
		PincerL1 = new ModelRenderer(this, 30, 32);
		PincerL1.addBox(0F, 5F, 2.5F, 4, 4, 4);
		//   PincerL1.setRotationPoint(6F, 5F, -3F);
		PincerL1.setTextureSize(64, 128);
		PincerL1.mirror = true;
		setRotation(PincerL1, -0.7853982F, 0F, 0F);
		PincerLOuter = new ModelRenderer(this, 43, 19);
		PincerLOuter.addBox(2.5F, 9F, 3.5F, 1, 3, 2);
		//   PincerLOuter.setRotationPoint(6F, 5F, -3F);
		PincerLOuter.setTextureSize(64, 128);
		PincerLOuter.mirror = true;
		setRotation(PincerLOuter, -0.7853982F, 0F, 0F);
		PincerLInner = new ModelRenderer(this, 43, 12);
		PincerLInner.addBox(0.5F, 9F, 3.5F, 1, 3, 2);
		//   PincerLInner.setRotationPoint(6F, 5F, -3F);
		PincerLInner.setTextureSize(64, 128);
		PincerLInner.mirror = true;
		setRotation(PincerLInner, -0.7853982F, 0F, 0F);
		LegR1 = new ModelRenderer(this, 0, 70);
		LegR1.addBox(-1.5F, -1F, -1.5F, 3, 6, 3);
		LegR1.setRotationPoint(-3F, 14F, 0F);
		LegR1.setTextureSize(64, 128);
		LegR1.mirror = true;
		setRotation(LegR1, -1.047198F, 0F, 0F);
		LegR2 = new ModelRenderer(this, 0, 82);
		LegR2.addBox(-1F, 0F, -5.5F, 2, 7, 3);
		//   LegR2.setRotationPoint(-3F, 14F, 0F);
		LegR2.setTextureSize(64, 128);
		LegR2.mirror = true;
		setRotation(LegR2, 0.5235988F, 0F, 0F);
		FootR = new ModelRenderer(this, 0, 102);
		FootR.addBox(-2F, 7F, -2.5F, 4, 3, 4);
		FootR.setRotationPoint(-3F, 14F, 0F);
		FootR.setTextureSize(64, 128);
		FootR.mirror = true;
		setRotation(FootR, 0F, 0F, 0F);
		FootRFront = new ModelRenderer(this, 0, 112);
		FootRFront.addBox(-2F, 8F, -4.5F, 4, 2, 2);
		//    FootRFront.setRotationPoint(-3F, 14F, 0F);
		FootRFront.setTextureSize(64, 128);
		FootRFront.mirror = true;
		setRotation(FootRFront, 0F, 0F, 0F);
		ToeROuter1 = new ModelRenderer(this, 0, 118);
		ToeROuter1.addBox(-1.5F, 8F, -6.5F, 1, 1, 2);
		//    ToeROuter1.setRotationPoint(-3F, 14F, 0F);
		ToeROuter1.setTextureSize(64, 128);
		ToeROuter1.mirror = true;
		setRotation(ToeROuter1, 0F, 0F, 0F);
		ToeROuter2 = new ModelRenderer(this, 0, 124);
		ToeROuter2.addBox(-1.5F, 9.8F, -3.4F, 1, 2, 1);
		//   ToeROuter2.setRotationPoint(-3F, 14F, 0F);
		ToeROuter2.setTextureSize(64, 128);
		ToeROuter2.mirror = true;
		setRotation(ToeROuter2, -0.3490659F, 0F, 0F);
		ToeRInner1 = new ModelRenderer(this, 0, 118);
		ToeRInner1.addBox(0.5F, 8F, -6.5F, 1, 1, 2);
		//    ToeRInner1.setRotationPoint(-3F, 14F, 0F);
		ToeRInner1.setTextureSize(64, 128);
		ToeRInner1.mirror = true;
		setRotation(ToeRInner1, 0F, 0F, 0F);
		ToeRInner2 = new ModelRenderer(this, 0, 124);
		ToeRInner2.addBox(0.5F, 9.8F, -3.4F, 1, 2, 1);
		//   ToeRInner2.setRotationPoint(-3F, 14F, 0F);
		ToeRInner2.setTextureSize(64, 128);
		ToeRInner2.mirror = true;
		setRotation(ToeRInner2, -0.3490659F, 0F, 0F);
		FootRBack = new ModelRenderer(this, 0, 96);
		FootRBack.addBox(-1F, 8F, 1.5F, 2, 2, 1);
		//   FootRBack.setRotationPoint(-3F, 14F, 0F);
		FootRBack.setTextureSize(64, 128);
		FootRBack.mirror = true;
		setRotation(FootRBack, 0F, 0F, 0F);

		ToeRBack1 = new ModelRenderer(this, 0, 118);
		ToeRBack1.addBox(-0.5F, 8F, -4.5F, 1, 1, 2);
		//    ToeRBack1.setRotationPoint(3F, 14F, 0F);
		ToeRBack1.setTextureSize(64, 128);
		ToeRBack1.mirror = true;
		setRotation(ToeRBack1, 0F, 3.141593F, 0F);

		ToeRBack2 = new ModelRenderer(this, 0, 124);
		ToeRBack2.addBox(-0.5F, 9.2F, -1.5F, 1, 2, 1);
		//     ToeRBack2.setRotationPoint(3F, 14F, 0F);
		ToeRBack2.setTextureSize(64, 128);
		ToeRBack2.mirror = true;
		setRotation(ToeRBack2, -0.3490659F, 3.141593F, 0F);

		LegL1 = new ModelRenderer(this, 0, 70);
		LegL1.addBox(-1.5F, -1F, -1.5F, 3, 6, 3);
		LegL1.setRotationPoint(3F, 14F, 0F);
		LegL1.setTextureSize(64, 128);
		LegL1.mirror = true;
		setRotation(LegL1, -1.047198F, 0F, 0F);
		LegL2 = new ModelRenderer(this, 0, 82);
		LegL2.addBox(-1F, 0F, -5.5F, 2, 7, 3);
		//    LegL2.setRotationPoint(3F, 14F, 0F);
		LegL2.setTextureSize(64, 128);
		LegL2.mirror = true;
		setRotation(LegL2, 0.5235988F, 0F, 0F);
		FootL = new ModelRenderer(this, 0, 102);
		FootL.addBox(-2F, 7F, -2.5F, 4, 3, 4);
		FootL.setRotationPoint(3F, 14F, 0F);
		FootL.setTextureSize(64, 128);
		FootL.mirror = true;
		setRotation(FootL, 0F, 0F, 0F);
		FootLFront = new ModelRenderer(this, 0, 112);
		FootLFront.addBox(-2F, 8F, -4.5F, 4, 2, 2);
		//     FootLFront.setRotationPoint(3F, 14F, 0F);
		FootLFront.setTextureSize(64, 128);
		FootLFront.mirror = true;
		setRotation(FootLFront, 0F, 0F, 0F);
		ToeLOuter1 = new ModelRenderer(this, 0, 118);
		ToeLOuter1.addBox(0.5F, 8F, -6.5F, 1, 1, 2);
		//    ToeLOuter1.setRotationPoint(3F, 14F, 0F);
		ToeLOuter1.setTextureSize(64, 128);
		ToeLOuter1.mirror = true;
		setRotation(ToeLOuter1, 0F, 0F, 0F);
		ToeLOuter2 = new ModelRenderer(this, 0, 124);
		ToeLOuter2.addBox(0.5F, 9.8F, -3.4F, 1, 2, 1);
		//   ToeLOuter2.setRotationPoint(3F, 14F, 0F);
		ToeLOuter2.setTextureSize(64, 128);
		ToeLOuter2.mirror = true;
		setRotation(ToeLOuter2, -0.3490659F, 0F, 0F);
		ToeLInner1 = new ModelRenderer(this, 0, 118);
		ToeLInner1.addBox(-1.5F, 8F, -6.5F, 1, 1, 2);
		//     ToeLInner1.setRotationPoint(3F, 14F, 0F);
		ToeLInner1.setTextureSize(64, 128);
		ToeLInner1.mirror = true;
		setRotation(ToeLInner1, 0F, 0F, 0F);
		ToeLInner2 = new ModelRenderer(this, 0, 124);
		ToeLInner2.addBox(-1.5F, 9.8F, -3.4F, 1, 2, 1);
		//     ToeLInner2.setRotationPoint(3F, 14F, 0F);
		ToeLInner2.setTextureSize(64, 128);
		ToeLInner2.mirror = true;
		setRotation(ToeLInner2, -0.3490659F, 0F, 0F);
		FootLBack = new ModelRenderer(this, 0, 96);
		FootLBack.addBox(-1F, 8F, 1.5F, 2, 2, 1);
		//     FootLBack.setRotationPoint(3F, 14F, 0F);
		FootLBack.setTextureSize(64, 128);
		FootLBack.mirror = true;
		setRotation(FootLBack, 0F, 0F, 0F);
		ToeLBack1 = new ModelRenderer(this, 0, 118);
		ToeLBack1.addBox(-0.5F, 8F, -4.5F, 1, 1, 2);
		//    ToeLBack1.setRotationPoint(3F, 14F, 0F);
		ToeLBack1.setTextureSize(64, 128);
		ToeLBack1.mirror = true;
		setRotation(ToeLBack1, 0F, 3.141593F, 0F);
		ToeLBack2 = new ModelRenderer(this, 0, 124);
		ToeLBack2.addBox(-0.5F, 9.2F, -1.5F, 1, 2, 1);
		//    ToeLBack2.setRotationPoint(3F, 14F, 0F);
		ToeLBack2.setTextureSize(64, 128);
		ToeLBack2.mirror = true;
		setRotation(ToeLBack2, -0.3490659F, 3.141593F, 0F);


		ArmR1.addChild(ArmR2);
		ArmR1.addChild(ArmR3);
		ArmR1.addChild(PincerR1);
		ArmR1.addChild(PincerRInner);
		ArmR1.addChild(PincerROuter);

		ArmL1.addChild(ArmL2);
		ArmL1.addChild(ArmL3);
		ArmL1.addChild(PincerL1);
		ArmL1.addChild(PincerLInner);
		ArmL1.addChild(PincerLOuter);

		/*    HeadMain.addChild(HeadTop);
       HeadMain.addChild(HeadFront);
       HeadMain.addChild(HeadBottom);
       HeadMain.addChild(EyeR);
       HeadMain.addChild(EyeL);
       HeadMain.addChild(MandibleR1);
       HeadMain.addChild(MandibleR2);
       HeadMain.addChild(MandibleL1);
       HeadMain.addChild(MandibleL2);
		 */
		LegR1.addChild(LegR2);

		FootR.addChild(FootRFront);
		FootR.addChild(FootRBack);
		FootR.addChild(ToeRBack1);
		FootR.addChild(ToeRBack2);
		FootR.addChild(ToeRInner1);
		FootR.addChild(ToeRInner2);
		FootR.addChild(ToeROuter1);
		FootR.addChild(ToeROuter2);

		LegL1.addChild(LegL2);

		FootL.addChild(FootLFront);
		FootL.addChild(FootLBack);
		FootL.addChild(ToeLBack1);
		FootL.addChild(ToeLBack2);
		FootL.addChild(ToeLInner1);
		FootL.addChild(ToeLInner2);
		FootL.addChild(ToeLOuter1);
		FootL.addChild(ToeLOuter2);
	}

	@Override
	public void render(Entity entity, float limbSwing, float prevLimbSwing, float entityTickTime, float rotationYaw, float rotationPitch, float unitPixel) {
		super.render(entity, limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel);
		setRotationAngles(limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel, entity);
		HeadTop.render(unitPixel);
		HeadMain.render(unitPixel);
		HeadFront.render(unitPixel);
		HeadBottom.render(unitPixel);
		EyeR.render(unitPixel);
		EyeL.render(unitPixel);
		MandibleR1.render(unitPixel);
		MandibleR2.render(unitPixel);
		MandibleL1.render(unitPixel);
		MandibleL2.render(unitPixel);
		Neck.render(unitPixel);
		BodyTop.render(unitPixel);
		BodyMid.render(unitPixel);
		BodyMain.render(unitPixel);
		BodyBack.render(unitPixel);
		ArmR1.render(unitPixel);
		//    ArmR2.render(unitPixel);
		//    ArmR3.render(unitPixel);
		//    PincerR1.render(unitPixel);
		//    PincerROuter.render(unitPixel);
		//    PincerRInner.render(unitPixel);
		ArmL1.render(unitPixel);
		//    ArmL2.render(unitPixel);
		//    ArmL3.render(unitPixel);
		//    PincerL1.render(unitPixel);
		//    PincerLOuter.render(unitPixel);
		//    PincerLInner.render(unitPixel);
		LegR1.render(unitPixel);
		// LegR2.render(unitPixel);
		FootR.render(unitPixel);
		/*   FootRFront.render(unitPixel);
		    ToeROuter1.render(unitPixel);
		    ToeROuter2.render(unitPixel);
		    ToeRInner1.render(unitPixel);
		    ToeRInner2.render(unitPixel);
		    FootRBack.render(unitPixel);
		    ToeRBack1.render(unitPixel);
		    ToeRBack2.render(unitPixel);
		 */    LegL1.render(unitPixel);
		 //   LegL2.render(unitPixel);
		 FootL.render(unitPixel);
		 /*   FootLFront.render(unitPixel);
		    ToeLOuter1.render(unitPixel);
		    ToeLOuter2.render(unitPixel);
		    ToeLInner1.render(unitPixel);
		    ToeLInner2.render(unitPixel);
		    FootLBack.render(unitPixel);
		    ToeLBack1.render(unitPixel);
		    ToeLBack2.render(unitPixel);
		  */
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float limbSwing, float prevLimbSwing, float entityTickTime, float rotationYaw, float rotationPitch, float unitPixel, Entity entity)
	{
		super.setRotationAngles(limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel, entity);

		float movcos1= MathHelper.cos(limbSwing * 0.7F) * 0.3F * prevLimbSwing;
		float movsin1= MathHelper.sin(limbSwing * 0.7F) * 1.2F * prevLimbSwing;
		float movsin2= MathHelper.sin(limbSwing * 0.0F) * 0.0F * prevLimbSwing;
		float x=0.2617994F;
		float lx=1.047198F;
		float ex=0.6981317F;

		HeadMain.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		HeadTop.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		HeadFront.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		HeadBottom.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		EyeR.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		EyeL.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		MandibleR1.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		MandibleR2.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		MandibleL1.rotateAngleY = rotationYaw / (180F / (float)Math.PI);
		MandibleL2.rotateAngleY = rotationYaw / (180F / (float)Math.PI);

		HeadMain.rotateAngleX =  rotationPitch / (180F / (float)Math.PI);
		HeadTop.rotateAngleX = rotationPitch / (180F / (float)Math.PI);
		HeadFront.rotateAngleX = rotationPitch / (180F / (float)Math.PI);
		HeadBottom.rotateAngleX = rotationPitch / (180F / (float)Math.PI);
		EyeR.rotateAngleX = rotationPitch / (180F / (float)Math.PI) +ex;
		EyeL.rotateAngleX = rotationPitch / (180F / (float)Math.PI)+ex;
		MandibleR1.rotateAngleX = rotationPitch / (180F / (float)Math.PI)+x;
		MandibleR2.rotateAngleX = rotationPitch / (180F / (float)Math.PI)+x;
		MandibleL1.rotateAngleX = rotationPitch / (180F / (float)Math.PI)+x;
		MandibleL2.rotateAngleX = rotationPitch / (180F / (float)Math.PI)+x;

		ArmR1.rotateAngleZ =   -movcos1;
		ArmL1.rotateAngleZ =  -movcos1;

		ArmR1.rotateAngleX = -x + movsin1;
		ArmL1.rotateAngleX = -x -movsin1;

		LegR1.rotateAngleX = -lx - movsin1;
		LegL1.rotateAngleX = -lx + movsin1;
		LegR2.rotateAngleX = 0.5235988F + lx  - movsin2;
		LegL2.rotateAngleX = 0.5235988F + lx  + movsin2;
		FootR.rotateAngleX = - movsin1;
		FootL.rotateAngleX = + movsin1;

	}
}
