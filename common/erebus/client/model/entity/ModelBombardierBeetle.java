package erebus.client.model.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

@SideOnly(Side.CLIENT)
public class ModelBombardierBeetle extends ModelBase {
	ModelRenderer torso1;
	ModelRenderer torso2;
	ModelRenderer torso3;
	ModelRenderer torso4;
	ModelRenderer torso5;
	ModelRenderer spewer;
	ModelRenderer breastpiece;
	ModelRenderer head;
	ModelRenderer neckpiece;
	ModelRenderer eyeleft;
	ModelRenderer eyeright;
	ModelRenderer sensorleft;
	ModelRenderer sensorright;
	ModelRenderer jawleft;
	ModelRenderer jawright;
	ModelRenderer jawmid;
	ModelRenderer frontlegleft1;
	ModelRenderer frontlegright1;
	ModelRenderer midlegleft1;
	ModelRenderer midlegright1;
	ModelRenderer hindlegleft1;
	ModelRenderer hindlegright1;
	ModelRenderer frontlegleft2;
	ModelRenderer frontlegright2;
	ModelRenderer midlegleft2;
	ModelRenderer midlegright2;
	ModelRenderer hindlegleft2;
	ModelRenderer hindlegright2;
	ModelRenderer frontleftclaw;
	ModelRenderer frontrightclaw;
	ModelRenderer midleftclaw;
	ModelRenderer midrightclaw;
	ModelRenderer hindleftclaw;
	ModelRenderer hindrightclaw;

	public ModelBombardierBeetle() {
		textureWidth = 128;
		textureHeight = 64;
		torso1 = new ModelRenderer(this, 0, 0);
		torso1.addBox(-3F, -2F, -5F, 6, 4, 6);
		torso1.setRotationPoint(0F, 15F, -5F);
		torso1.setTextureSize(128, 64);
		torso1.mirror = true;
		setRotation(torso1, 0.1115358F, 0F, 0F);
		torso2 = new ModelRenderer(this, 0, 11);
		torso2.addBox(-4.5F, -2.5F, 0F, 9, 6, 11);
		torso2.setRotationPoint(0F, 15F, -5F);
		torso2.setTextureSize(128, 64);
		torso2.mirror = true;
		setRotation(torso2, -0.0371786F, 0F, 0F);
		torso3 = new ModelRenderer(this, 0, 29);
		torso3.addBox(-3.5F, -6F, 9F, 7, 5, 3);
		torso3.setRotationPoint(0F, 15F, -5F);
		torso3.setTextureSize(128, 64);
		torso3.mirror = true;
		setRotation(torso3, -0.4089647F, 0F, 0F);
		torso4 = new ModelRenderer(this, 0, 38);
		torso4.addBox(-3F, -9.5F, 9F, 6, 4, 2);
		torso4.setRotationPoint(0F, 15F, -5F);
		torso4.setTextureSize(128, 64);
		torso4.mirror = true;
		setRotation(torso4, -0.7807508F, 0F, 0F);
		torso5 = new ModelRenderer(this, 0, 45);
		torso5.addBox(-2F, -12F, 7.5F, 4, 3, 2);
		torso5.setRotationPoint(0F, 15F, -5F);
		torso5.setTextureSize(128, 64);
		torso5.mirror = true;
		setRotation(torso5, -1.07818F, 0F, 0F);
		spewer = new ModelRenderer(this, 0, 51);
		spewer.addBox(-1F, -6F, 12.5F, 2, 2, 3);
		spewer.setRotationPoint(0F, 15F, -5F);
		spewer.setTextureSize(128, 64);
		spewer.mirror = true;
		setRotation(spewer, -0.6320364F, 0F, 0F);
		breastpiece = new ModelRenderer(this, 21, 29);
		breastpiece.addBox(-2F, 2F, -3F, 4, 1, 4);
		breastpiece.setRotationPoint(0F, 15F, -5F);
		breastpiece.setTextureSize(128, 64);
		breastpiece.mirror = true;
		setRotation(breastpiece, -0.1858931F, 0F, 0F);
		head = new ModelRenderer(this, 50, 0);
		head.addBox(-2.5F, -2F, -4.5F, 5, 3, 5);
		head.setRotationPoint(0F, 15F, -10F);
		head.setTextureSize(128, 64);
		head.mirror = true;
		setRotation(head, 0.4461433F, 0F, 0F);
		neckpiece = new ModelRenderer(this, 50, 9);
		neckpiece.addBox(-2F, 0F, -3F, 4, 2, 4);
		neckpiece.setRotationPoint(0F, 15F, -10F);
		neckpiece.setTextureSize(128, 64);
		neckpiece.mirror = true;
		setRotation(neckpiece, 0.1115358F, 0F, 0F);
		eyeleft = new ModelRenderer(this, 50, 16);
		eyeleft.addBox(2F, 0F, -3F, 1, 1, 1);
		eyeleft.setRotationPoint(0F, 15F, -10F);
		eyeleft.setTextureSize(128, 64);
		eyeleft.mirror = true;
		setRotation(eyeleft, 0F, 0.0743572F, 0F);
		eyeright = new ModelRenderer(this, 55, 16);
		eyeright.addBox(-3F, 0F, -3F, 1, 1, 1);
		eyeright.setRotationPoint(0F, 15F, -10F);
		eyeright.setTextureSize(128, 64);
		eyeright.mirror = true;
		setRotation(eyeright, 0F, -0.074351F, 0F);
		sensorleft = new ModelRenderer(this, 44, 19);
		sensorleft.addBox(0F, -1F, -7.5F, 4, 0, 6);
		sensorleft.setRotationPoint(0F, 15F, -10F);
		sensorleft.setTextureSize(128, 64);
		sensorleft.mirror = true;
		setRotation(sensorleft, -0.3346075F, -0.2602503F, 0F);
		sensorright = new ModelRenderer(this, 53, 19);
		sensorright.addBox(-4F, -1F, -7.5F, 4, 0, 6);
		sensorright.setRotationPoint(0F, 15F, -10F);
		sensorright.setTextureSize(128, 64);
		sensorright.mirror = true;
		setRotation(sensorright, -0.3346075F, 0.260246F, 0F);
		jawleft = new ModelRenderer(this, 50, 26);
		jawleft.addBox(1F, -1F, -8F, 3, 1, 5);
		jawleft.setRotationPoint(0F, 15F, -10F);
		jawleft.setTextureSize(128, 64);
		jawleft.mirror = true;
		setRotation(jawleft, 0.5576792F, 0F, 0.2230717F);
		jawright = new ModelRenderer(this, 50, 33);
		jawright.addBox(-4F, -1F, -8F, 3, 1, 5);
		jawright.setRotationPoint(0F, 15F, -10F);
		jawright.setTextureSize(128, 64);
		jawright.mirror = true;
		setRotation(jawright, 0.5576851F, 0F, -0.2230705F);
		jawmid = new ModelRenderer(this, 50, 40);
		jawmid.addBox(-0.5F, -1F, -8F, 1, 3, 5);
		jawmid.setRotationPoint(0F, 15F, -10F);
		jawmid.setTextureSize(128, 64);
		jawmid.mirror = true;
		setRotation(jawmid, 0.1858931F, 0F, 0F);
		frontlegleft1 = new ModelRenderer(this, 90, 0);
		frontlegleft1.addBox(-1F, 0F, -1F, 2, 5, 2);
		frontlegleft1.setRotationPoint(2F, 18F, -5F);
		frontlegleft1.setTextureSize(128, 64);
		frontlegleft1.mirror = true;
		setRotation(frontlegleft1, -1.375609F, -1.189716F, 0F);
		frontlegright1 = new ModelRenderer(this, 99, 0);
		frontlegright1.addBox(-1F, 0F, -1F, 2, 5, 2);
		frontlegright1.setRotationPoint(-2F, 18F, -5F);
		frontlegright1.setTextureSize(128, 64);
		frontlegright1.mirror = true;
		setRotation(frontlegright1, -1.375616F, 1.189721F, 0F);
		midlegleft1 = new ModelRenderer(this, 90, 8);
		midlegleft1.addBox(-1F, 0F, -1F, 2, 6, 2);
		midlegleft1.setRotationPoint(3F, 18F, -2F);
		midlegleft1.setTextureSize(128, 64);
		midlegleft1.mirror = true;
		setRotation(midlegleft1, -1.412787F, -2.044824F, 0F);
		midlegright1 = new ModelRenderer(this, 99, 8);
		midlegright1.addBox(-1F, 0F, -1F, 2, 6, 2);
		midlegright1.setRotationPoint(-3F, 18F, -2F);
		midlegright1.setTextureSize(128, 64);
		midlegright1.mirror = true;
		setRotation(midlegright1, -1.412787F, 2.044828F, 0F);
		hindlegleft1 = new ModelRenderer(this, 90, 17);
		hindlegleft1.addBox(-1F, 0F, -0.5F, 2, 7, 2);
		hindlegleft1.setRotationPoint(3F, 18F, 1F);
		hindlegleft1.setTextureSize(128, 64);
		hindlegleft1.mirror = true;
		setRotation(hindlegleft1, -1.487144F, -2.453788F, 0F);
		hindlegright1 = new ModelRenderer(this, 99, 17);
		hindlegright1.addBox(-1F, 0F, -0.5F, 2, 7, 2);
		hindlegright1.setRotationPoint(-3F, 18F, 1F);
		hindlegright1.setTextureSize(128, 64);
		hindlegright1.mirror = true;
		setRotation(hindlegright1, -1.487144F, 2.453793F, 0F);
		frontlegleft2 = new ModelRenderer(this, 90, 27);
		frontlegleft2.addBox(-0.5F, 3.5F, -3.5F, 1, 6, 1);
		frontlegleft2.setRotationPoint(2F, 18F, -5F);
		frontlegleft2.setTextureSize(128, 64);
		frontlegleft2.mirror = true;
		setRotation(frontlegleft2, -0.669215F, -1.189721F, 0F);
		frontlegright2 = new ModelRenderer(this, 95, 27);
		frontlegright2.addBox(-0.5F, 3.5F, -3.5F, 1, 6, 1);
		frontlegright2.setRotationPoint(-2F, 18F, -5F);
		frontlegright2.setTextureSize(128, 64);
		frontlegright2.mirror = true;
		setRotation(frontlegright2, -0.669215F, 1.189721F, 0F);
		midlegleft2 = new ModelRenderer(this, 90, 35);
		midlegleft2.addBox(-0.5F, 4.5F, -3.5F, 1, 7, 1);
		midlegleft2.setRotationPoint(3F, 18F, -2F);
		midlegleft2.setTextureSize(128, 64);
		midlegleft2.mirror = true;
		setRotation(midlegleft2, -0.8179294F, -2.044828F, 0F);
		midlegright2 = new ModelRenderer(this, 95, 35);
		midlegright2.addBox(-0.5F, 4.5F, -3.5F, 1, 7, 1);
		midlegright2.setRotationPoint(-3F, 18F, -2F);
		midlegright2.setTextureSize(128, 64);
		midlegright2.mirror = true;
		setRotation(midlegright2, -0.8179294F, 2.044828F, 0F);
		hindlegleft2 = new ModelRenderer(this, 90, 44);
		hindlegleft2.addBox(-0.5F, 5.5F, -4F, 1, 8, 1);
		hindlegleft2.setRotationPoint(3F, 18F, 1F);
		hindlegleft2.setTextureSize(128, 64);
		hindlegleft2.mirror = true;
		setRotation(hindlegleft2, -0.8922867F, -2.453793F, 0F);
		hindlegright2 = new ModelRenderer(this, 95, 44);
		hindlegright2.addBox(-0.5F, 5.5F, -4F, 1, 8, 1);
		hindlegright2.setRotationPoint(-3F, 18F, 1F);
		hindlegright2.setTextureSize(128, 64);
		hindlegright2.mirror = true;
		setRotation(hindlegright2, -0.8922867F, 2.453793F, 0F);
		frontleftclaw = new ModelRenderer(this, 110, 0);
		frontleftclaw.addBox(-1F, 3.5F, -10F, 2, 2, 2);
		frontleftclaw.setRotationPoint(2F, 18F, -5F);
		frontleftclaw.setTextureSize(128, 64);
		frontleftclaw.mirror = true;
		setRotation(frontleftclaw, 0.1115358F, -1.189721F, 0F);
		frontrightclaw = new ModelRenderer(this, 119, 0);
		frontrightclaw.addBox(-1F, 3.5F, -10F, 2, 2, 2);
		frontrightclaw.setRotationPoint(-2F, 18F, -5F);
		frontrightclaw.setTextureSize(128, 64);
		frontrightclaw.mirror = true;
		setRotation(frontrightclaw, 0.1115358F, 1.189721F, 0F);
		midleftclaw = new ModelRenderer(this, 110, 5);
		midleftclaw.addBox(-1F, 3F, -12F, 2, 2, 2);
		midleftclaw.setRotationPoint(3F, 18F, -2F);
		midleftclaw.setTextureSize(128, 64);
		midleftclaw.mirror = true;
		setRotation(midleftclaw, 0.1487144F, -2.044828F, 0F);
		midrightclaw = new ModelRenderer(this, 119, 5);
		midrightclaw.addBox(-1F, 3F, -12F, 2, 2, 2);
		midrightclaw.setRotationPoint(-3F, 18F, -2F);
		midrightclaw.setTextureSize(128, 64);
		midrightclaw.mirror = true;
		setRotation(midrightclaw, 0.1487144F, 2.044828F, 0F);
		hindleftclaw = new ModelRenderer(this, 110, 10);
		hindleftclaw.addBox(-1F, 3.5F, -15F, 2, 2, 3);
		hindleftclaw.setRotationPoint(3F, 18F, 1F);
		hindleftclaw.setTextureSize(128, 64);
		hindleftclaw.mirror = true;
		setRotation(hindleftclaw, 0.0743572F, -2.453793F, 0F);
		hindrightclaw = new ModelRenderer(this, 110, 16);
		hindrightclaw.addBox(-1F, 3.5F, -15F, 2, 2, 3);
		hindrightclaw.setRotationPoint(-3F, 18F, 1F);
		hindrightclaw.setTextureSize(128, 64);
		hindrightclaw.mirror = true;
		setRotation(hindrightclaw, 0.0743572F, 2.453793F, 0F);
	}

	@Override
	public void render(Entity entity, float limbSwing, float prevLimbSwing, float entityTickTime, float rotationYaw, float rotationPitch, float unitPixel) {
		super.render(entity, limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel);
		setRotationAngles(limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel, entity);
		torso1.render(unitPixel);
		torso2.render(unitPixel);
		torso3.render(unitPixel);
		torso4.render(unitPixel);
		torso5.render(unitPixel);
		spewer.render(unitPixel);
		breastpiece.render(unitPixel);
		head.render(unitPixel);
		neckpiece.render(unitPixel);
		eyeleft.render(unitPixel);
		eyeright.render(unitPixel);
		sensorleft.render(unitPixel);
		sensorright.render(unitPixel);
		jawleft.render(unitPixel);
		jawright.render(unitPixel);
		jawmid.render(unitPixel);
		frontlegleft1.render(unitPixel);
		frontlegright1.render(unitPixel);
		midlegleft1.render(unitPixel);
		midlegright1.render(unitPixel);
		hindlegleft1.render(unitPixel);
		hindlegright1.render(unitPixel);
		frontlegleft2.render(unitPixel);
		frontlegright2.render(unitPixel);
		midlegleft2.render(unitPixel);
		midlegright2.render(unitPixel);
		hindlegleft2.render(unitPixel);
		hindlegright2.render(unitPixel);
		frontleftclaw.render(unitPixel);
		frontrightclaw.render(unitPixel);
		midleftclaw.render(unitPixel);
		midrightclaw.render(unitPixel);
		hindleftclaw.render(unitPixel);
		hindrightclaw.render(unitPixel);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float limbSwing, float prevLimbSwing, float entityTickTime, float rotationYaw, float rotationPitch, float unitPixel, Entity entity) {
		float heady = rotationYaw / (180F / (float) Math.PI);
		float cosy1 = MathHelper.cos(limbSwing * 0.7F) * 0.4F * prevLimbSwing;
		float cosy2 = MathHelper.cos(limbSwing * 0.7F) * 0.7F * prevLimbSwing;
		float cosz1 = MathHelper.cos(limbSwing * 0.7F) * 0.2F * prevLimbSwing;
		head.rotateAngleY = heady;
		neckpiece.rotateAngleY = heady;
		eyeleft.rotateAngleY = heady;
		eyeright.rotateAngleY = heady;
		sensorleft.rotateAngleY = heady - 0.260F;
		sensorright.rotateAngleY = heady + 0.260F;
		jawleft.rotateAngleY = heady;
		jawright.rotateAngleY = heady;
		jawmid.rotateAngleY = heady;
		hindlegleft1.rotateAngleY = cosy1 - 2.454F;
		hindlegleft2.rotateAngleY = cosy1 - 2.454F;
		hindleftclaw.rotateAngleY = cosy1 - 2.454F;
		midlegleft1.rotateAngleY = -cosy1 - 2.045F;
		midlegleft2.rotateAngleY = -cosy1 - 2.045F;
		midleftclaw.rotateAngleY = -cosy1 - 2.045F;
		frontlegleft1.rotateAngleY = cosy2 - 1.190F;
		frontlegleft2.rotateAngleY = cosy2 - 1.190F;
		frontleftclaw.rotateAngleY = cosy2 - 1.190F;
		hindlegright1.rotateAngleY = cosy1 + 2.454F;
		hindlegright2.rotateAngleY = cosy1 + 2.454F;
		hindrightclaw.rotateAngleY = cosy1 + 2.454F;
		midlegright1.rotateAngleY = -cosy1 + 2.045F;
		midlegright2.rotateAngleY = -cosy1 + 2.045F;
		midrightclaw.rotateAngleY = -cosy1 + 2.045F;
		frontlegright1.rotateAngleY = cosy2 + 1.190F;
		frontlegright2.rotateAngleY = cosy2 + 1.190F;
		frontrightclaw.rotateAngleY = cosy2 + 1.190F;
		hindlegleft1.rotateAngleZ = cosz1;
		hindlegleft2.rotateAngleZ = cosz1;
		hindleftclaw.rotateAngleZ = cosz1;
		midlegleft1.rotateAngleZ = -cosz1;
		midlegleft2.rotateAngleZ = -cosz1;
		midleftclaw.rotateAngleZ = -cosz1;
		frontlegleft1.rotateAngleZ = cosz1;
		frontlegleft2.rotateAngleZ = cosz1;
		frontleftclaw.rotateAngleZ = cosz1;
		hindlegright1.rotateAngleZ = cosz1;
		hindlegright2.rotateAngleZ = cosz1;
		hindrightclaw.rotateAngleZ = cosz1;
		midlegright1.rotateAngleZ = -cosz1;
		midlegright2.rotateAngleZ = -cosz1;
		midrightclaw.rotateAngleZ = -cosz1;
		frontlegright1.rotateAngleZ = cosz1;
		frontlegright2.rotateAngleZ = cosz1;
		frontrightclaw.rotateAngleZ = cosz1;
	}
}
